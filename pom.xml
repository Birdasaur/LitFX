<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.birdasaur.litfx</groupId>
    <artifactId>LitFX</artifactId>
    <version>${revision}${changelist}</version>
    <packaging>pom</packaging>

    <modules>
        <module>litfx-core</module>
        <module>litfx-demos</module>
        <module>litfx-controls</module>
    </modules>

    <name>LitFX</name>
    <description>Bolt on 2D special effects for JavaFX</description>
    <url>https://github.com/Birdasaur/LitFX</url>

    <licenses>
        <license>
            <name>Apache-2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Birdasaur</name>
        </developer>
        <developer>
            <name>samypr100</name>
        </developer>
    </developers>

    <properties>
        <!-- Using "revision" as SSOT https://maven.apache.org/maven-ci-friendly.html -->
        <revision>0.2.0</revision>
        <changelist>-SNAPSHOT</changelist>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>21</java.version>
        <maven.min.version>3.8.8</maven.min.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <!-- Use "mvn versions:display-property-updates" to show updates -->
        <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
        <maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
        <maven.deploy.plugin.version>3.1.4</maven.deploy.plugin.version>
        <maven.enforcer.plugin.version>3.6.0</maven.enforcer.plugin.version>
        <maven.source.plugin.version>3.3.0</maven.source.plugin.version>
        <maven.javadoc.plugin.version>3.5.0</maven.javadoc.plugin.version>
        <maven.gpg.plugin.version>3.1.0</maven.gpg.plugin.version>
        <codehaus.flatten.plugin.version>1.7.1</codehaus.flatten.plugin.version>
        <maven.scm.provider.gitexe.version>2.0.1</maven.scm.provider.gitexe.version>
        <central.publishing.plugin.version>0.8.0</central.publishing.plugin.version>
        <javafx.version>21.0.7</javafx.version>
        <javafx.plugin.version>0.0.8</javafx.plugin.version>
        <!-- Using "runtime" as default value for downstream users of the library -->
        <!-- Note, you'll need to run "mvn clean install" when doing local dev -->
        <!-- Since the default profile will set this scope to "compile" -->
        <javafx.dependency.scope>runtime</javafx.dependency.scope>
        <junit.jupiter.version>5.13.3</junit.jupiter.version>
    </properties>

    <scm>
        <connection>scm:git:git://github.com/Birdasaur/LitFX.git</connection>
        <developerConnection>scm:git:git@github.com:Birdasaur/LitFX.git</developerConnection>
        <url>https://github.com/Birdasaur/LitFX</url>
        <tag>LitFX-${revision}</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${maven.min.version},)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Prepare for Maven 5 -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${codehaus.flatten.plugin.version}</version>
                <configuration>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <!-- Updates POM used for install/publishing -->
                    <updatePomFile>true</updatePomFile>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <keepCommentsInPom>false</keepCommentsInPom>
                    <pomElements>
                        <build>flatten</build>
                        <profiles>flatten</profiles>
                        <pluginManagement>flatten</pluginManagement>
                    </pomElements>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>



    <profiles>
        <!--
        Default Maven Profile for Development
        This allows us to mark the JavaFX dependencies as runtime by default when published
        since the top-level properties are what the consuming side build tools use.
        -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <javafx.dependency.scope>compile</javafx.dependency.scope>
            </properties>
        </profile>
        <!-- Release Maven Profile -->
        <!-- mvn deploy -DperformRelease=true -->
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!-- Make the JavaFX dependencies compileOnly for packaging purposes -->
                <javafx.dependency.scope>provided</javafx.dependency.scope>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven.source.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven.javadoc.plugin.version}</version>
                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadoc</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven.gpg.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sonatype</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <distributionManagement>
                <!-- https://central.sonatype.org/publish/publish-maven/#distribution-management-and-authentication -->
                <repository>
                    <id>sonatype</id>
                    <url>https://central.sonatype.com</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <version>${central.publishing.plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <publishingServerId>sonatype</publishingServerId>
                            <autoPublish>true</autoPublish>
                            <waitUntil>published</waitUntil>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Github Packages Deployment -->
        <profile>
            <id>github</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/Birdasaur/LitFX</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

</project>
